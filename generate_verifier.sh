#!/bin/bash

# Script pour g√©n√©rer le contrat Solidity verifier
# N√©cessite snarkjs install√© globalement

echo "üîß G√©n√©ration du contrat Solidity verifier..."

# V√©rifier que snarkjs est install√©
if ! command -v snarkjs &> /dev/null; then
    echo "‚ùå snarkjs n'est pas install√©. Installation..."
    npm install -g snarkjs
fi

# Chemin vers le fichier .zkey
ZKEY_PATH="assets/multiplier2_final.zkey"
OUTPUT_PATH="contracts/Groth16Verifier.sol"

# Cr√©er le dossier contracts s'il n'existe pas
mkdir -p contracts

echo "üìã G√©n√©ration du verifier √† partir de $ZKEY_PATH..."

# G√©n√©rer le contrat Solidity verifier
snarkjs zkey export solidityverifier "$ZKEY_PATH" "$OUTPUT_PATH"

if [ $? -eq 0 ]; then
    echo "‚úÖ Contrat verifier g√©n√©r√© : $OUTPUT_PATH"
    echo ""
    echo "üìù Prochaines √©tapes :"
    echo "1. D√©ployer le contrat sur Sepolia testnet"
    echo "2. Mettre √† jour l'adresse dans onchain_verification_service.dart"
    echo "3. Tester la v√©rification on-chain"
    echo ""
    echo "üí° Exemple de d√©ploiement avec Remix :"
    echo "- Aller sur https://remix.ethereum.org"
    echo "- Copier le contenu de $OUTPUT_PATH"
    echo "- Compiler et d√©ployer sur Sepolia"
    echo "- Copier l'adresse du contrat d√©ploy√©"
else
    echo "‚ùå Erreur lors de la g√©n√©ration du verifier"
    exit 1
fi
